{"version":3,"file":"static/js/572.6f2d528c.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/icons/esm/Lock.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/icons/esm/Visibility.js","../node_modules/@material-ui/icons/esm/VisibilityOff.js","components/settings/SecurityAndLogin/EditPassword.js","components/settings/SecurityAndLogin.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/OutlinedInput/NotchedOutline.js","../node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n} from '@material-ui/core'\n\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\nimport React, { useState } from 'react'\n\nfunction EditPassword({ password, setPassword, updatePassword }) {\n  const [dialog, setDialog] = useState(false)\n\n  const handleChangeCurrentPassword = (e) => {\n    setPassword({ ...password, currentPassword: e.target.value })\n  }\n  const handleChangeNewPassword = (e) => {\n    setPassword({ ...password, newPassword: e.target.value })\n  }\n\n  const handleUpdatePassword = () => {\n    setDialog(false)\n    updatePassword()\n  }\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setDialog(true)}\n      >\n        Edit\n      </Button>\n\n      <Dialog\n        open={dialog}\n        onClose={() => setDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Update Password</DialogTitle>\n        <DialogContent>\n          {/* {error && <Alert severity=\"error\">{error}</Alert>} */}\n\n          <OutlinedInput\n            type={password.showCurrentPassword ? 'text' : 'password'}\n            value={password.currentPassword}\n            placeholder=\"Current Password\"\n            onChange={handleChangeCurrentPassword}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() =>\n                    setPassword({\n                      ...password,\n                      showCurrentPassword: !password.showCurrentPassword,\n                    })\n                  }\n                  edge=\"end\"\n                >\n                  {password.showCurrentPassword ? (\n                    <Visibility />\n                  ) : (\n                    <VisibilityOff />\n                  )}\n                </IconButton>\n              </InputAdornment>\n            }\n            style={{ width: '100%', marginBottom: '8px' }}\n          />\n          <OutlinedInput\n            type={password.showNewPassword ? 'text' : 'password'}\n            value={password.newPassword}\n            placeholder=\"New Password\"\n            onChange={handleChangeNewPassword}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() =>\n                    setPassword({\n                      ...password,\n                      showNewPassword: !password.showNewPassword,\n                    })\n                  }\n                  edge=\"end\"\n                >\n                  {password.showNewPassword ? (\n                    <Visibility />\n                  ) : (\n                    <VisibilityOff />\n                  )}\n                </IconButton>\n              </InputAdornment>\n            }\n            style={{ width: '100%' }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialog(false)}>Cancel</Button>\n          <Button onClick={handleUpdatePassword}>Change</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default EditPassword\n","import React, { useState } from 'react'\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n  Divider,\n  ListItemIcon,\n} from '@material-ui/core'\n\nimport useUpdateProfile from '../../hooks/useUpdateProfile'\nimport { Lock } from '@material-ui/icons'\nimport EditPassword from './SecurityAndLogin/EditPassword'\nfunction SecurityAndLogin() {\n  const [password, setPassword] = useState({\n    currentPassword: '',\n    newPassword: '',\n    showNewPassword: false,\n    showCurrentPassword: false,\n  })\n\n  const { updatePassword } = useUpdateProfile()\n\n  const handleUpdatePassword = () => {\n    updatePassword({\n      newPassword: password.newPassword,\n      currentPassword: password.currentPassword,\n    })\n  }\n  return (\n    <div>\n      <Typography\n        style={{\n          fontSize: '24px',\n          fontWeight: '800',\n          marginBottom: '16px',\n          marginTop: '16px',\n        }}\n      >\n        Security And Login\n      </Typography>\n      <Divider />\n\n      <Grid container spacing={2} style={{ marginTop: '8px' }}>\n        <List style={{ width: '100%' }}>\n          <ListItem>\n            <ListItemIcon>\n              <Lock />\n            </ListItemIcon>\n            <ListItemText\n              primary={<Typography>Change password</Typography>}\n              secondary={\n                <Typography>\n                  Use a strong password that you're not using elsewhere\n                </Typography>\n              }\n            />\n            <ListItemSecondaryAction>\n              <EditPassword\n                password={password}\n                setPassword={setPassword}\n                updatePassword={handleUpdatePassword}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </Grid>\n    </div>\n  )\n}\n\n\nexport default SecurityAndLogin\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      top: -5,\n      left: 0,\n      margin: 0,\n      padding: '0 8px',\n      pointerEvents: 'none',\n      borderRadius: 'inherit',\n      borderStyle: 'solid',\n      borderWidth: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the legend element when `labelWidth` is provided. */\n    legend: {\n      textAlign: 'left',\n      padding: 0,\n      lineHeight: '11px',\n      // sync with `height` in `legend` styles\n      transition: theme.transitions.create('width', {\n        duration: 150,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the legend element. */\n    legendLabelled: {\n      display: 'block',\n      width: 'auto',\n      textAlign: 'left',\n      padding: 0,\n      height: 11,\n      // sync with `lineHeight` in `legend` styles\n      fontSize: '0.75em',\n      visibility: 'hidden',\n      maxWidth: 0.01,\n      transition: theme.transitions.create('max-width', {\n        duration: 50,\n        easing: theme.transitions.easing.easeOut\n      }),\n      '& > span': {\n        paddingLeft: 5,\n        paddingRight: 5,\n        display: 'inline-block'\n      }\n    },\n\n    /* Styles applied to the legend element is notched. */\n    legendNotched: {\n      maxWidth: 1000,\n      transition: theme.transitions.create('max-width', {\n        duration: 100,\n        easing: theme.transitions.easing.easeOut,\n        delay: 50\n      })\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar NotchedOutline = /*#__PURE__*/React.forwardRef(function NotchedOutline(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      label = props.label,\n      labelWidthProp = props.labelWidth,\n      notched = props.notched,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"label\", \"labelWidth\", \"notched\", \"style\"]);\n\n  var theme = useTheme();\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n\n  if (label !== undefined) {\n    return /*#__PURE__*/React.createElement(\"fieldset\", _extends({\n      \"aria-hidden\": true,\n      className: clsx(classes.root, className),\n      ref: ref,\n      style: style\n    }, other), /*#__PURE__*/React.createElement(\"legend\", {\n      className: clsx(classes.legendLabelled, notched && classes.legendNotched)\n    }, label ? /*#__PURE__*/React.createElement(\"span\", null, label) : /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    })));\n  }\n\n  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01;\n  return /*#__PURE__*/React.createElement(\"fieldset\", _extends({\n    \"aria-hidden\": true,\n    style: _extends(_defineProperty({}, \"padding\".concat(capitalize(align)), 8), style),\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"legend\", {\n    className: classes.legend,\n    style: {\n      // IE 11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateNotchedOutline'\n})(NotchedOutline);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport NotchedOutline from './NotchedOutline';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var borderColor = theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      '&:hover $notchedOutline': {\n        borderColor: theme.palette.text.primary\n      },\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        '&:hover $notchedOutline': {\n          borderColor: borderColor\n        }\n      },\n      '&$focused $notchedOutline': {\n        borderColor: theme.palette.primary.main,\n        borderWidth: 2\n      },\n      '&$error $notchedOutline': {\n        borderColor: theme.palette.error.main\n      },\n      '&$disabled $notchedOutline': {\n        borderColor: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused $notchedOutline': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {\n      paddingLeft: 14\n    },\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {\n      paddingRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '18.5px 14px',\n      '&$marginDense': {\n        paddingTop: 10.5,\n        paddingBottom: 10.5\n      }\n    },\n\n    /* Styles applied to the `NotchedOutline` element. */\n    notchedOutline: {\n      borderColor: borderColor\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      padding: '18.5px 14px',\n      '&:-webkit-autofill': {\n        WebkitBoxShadow: theme.palette.type === 'light' ? null : '0 0 0 100px #266798 inset',\n        WebkitTextFillColor: theme.palette.type === 'light' ? null : '#fff',\n        caretColor: theme.palette.type === 'light' ? null : '#fff',\n        borderRadius: 'inherit'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 10.5,\n      paddingBottom: 10.5\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {\n      paddingLeft: 0\n    },\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {\n      paddingRight: 0\n    }\n  };\n};\nvar OutlinedInput = /*#__PURE__*/React.forwardRef(function OutlinedInput(props, ref) {\n  var classes = props.classes,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      label = props.label,\n      _props$labelWidth = props.labelWidth,\n      labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      notched = props.notched,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      other = _objectWithoutProperties(props, [\"classes\", \"fullWidth\", \"inputComponent\", \"label\", \"labelWidth\", \"multiline\", \"notched\", \"type\"]);\n\n  return /*#__PURE__*/React.createElement(InputBase, _extends({\n    renderSuffix: function renderSuffix(state) {\n      return /*#__PURE__*/React.createElement(NotchedOutline, {\n        className: classes.notchedOutline,\n        label: label,\n        labelWidth: labelWidth,\n        notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)\n      });\n    },\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, classes.underline),\n      notchedOutline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? OutlinedInput.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label of the input. It is only used for layout. The actual labelling\n   * is handled by `InputLabel`. If specified `labelWidth` is ignored.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The width of the label. Is ignored if `label` is provided. Prefer `label`\n   * if the input label appears with a strike through.\n   */\n  labelWidth: PropTypes.number,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nOutlinedInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiOutlinedInput'\n})(OutlinedInput);"],"names":["ListItemSecondaryAction","React","props","ref","classes","className","other","_objectWithoutProperties","_extends","clsx","root","muiName","withStyles","position","right","top","transform","name","createSvgIcon","d","InputAdornment","children","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","variant","muiFormControl","useFormControl","FormControlContext","value","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","Typography","color","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","password","setPassword","updatePassword","useState","dialog","setDialog","Button","onClick","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","OutlinedInput","type","showCurrentPassword","currentPassword","placeholder","onChange","e","target","endAdornment","IconButton","edge","Visibility","VisibilityOff","style","width","marginBottom","showNewPassword","newPassword","DialogActions","useUpdateProfile","fontSize","fontWeight","Divider","Grid","container","spacing","List","ListItem","ListItemIcon","Lock","ListItemText","primary","secondary","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","vertical","theme","border","flexShrink","backgroundColor","palette","divider","bottom","left","inset","alpha","middle","alignSelf","NotchedOutline","label","labelWidthProp","labelWidth","notched","align","useTheme","direction","legendLabelled","legendNotched","dangerouslySetInnerHTML","__html","_defineProperty","concat","capitalize","legend","padding","borderRadius","borderStyle","borderWidth","overflow","textAlign","lineHeight","transition","transitions","create","duration","easing","easeOut","visibility","paddingLeft","paddingRight","delay","_props$fullWidth","_props$inputComponent","inputComponent","_props$labelWidth","_props$multiline","multiline","_props$type","InputBase","renderSuffix","state","notchedOutline","Boolean","startAdornment","focused","underline","borderColor","shape","text","main","error","action","disabled","colorSecondary","adornedStart","adornedEnd","paddingTop","paddingBottom","input","WebkitBoxShadow","WebkitTextFillColor","caretColor","inputMarginDense","inputMultiline","inputAdornedStart","inputAdornedEnd"],"sourceRoot":""}