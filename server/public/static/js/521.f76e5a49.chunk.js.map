{"version":3,"file":"static/js/521.f76e5a49.chunk.js","mappings":"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","sources":["components/Navbar/DrawerBar.js","components/Chat/Messages.js","services/ChatService.js","components/Chat/Friends.js","../node_modules/@material-ui/icons/esm/Send.js","hooks/useSendMessage.js","components/Chat/MessageTextArea.js","components/Chat/FriendNotSelected.js","screens/Messenger.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/Slide/Slide.js","../node_modules/@material-ui/core/esm/Drawer/Drawer.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { UIContext } from '../../App'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { Button } from '@material-ui/core'\n\nconst drawerWidth = '100vw'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    color: 'rgb(86,84,255)',\n  },\n  drawerPaper: (darkMode) => ({\n    width: drawerWidth,\n    backgroundColor: 'rgb(36,37,38)',\n  }),\n}))\n\nexport default function DrawerBar({ children }) {\n  const { uiState, uiDispatch } = useContext(UIContext)\n  const classes = useStyles(uiState.darkMode)\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        open={uiState.drawer}\n        className={classes.drawer}\n        variant=\"persistent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        onClose={() => uiDispatch({ type: 'SET_DRAWER', payload: false })}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>{children}</div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() =>\n            uiDispatch({ type: 'SET_DRAWER', payload: !uiState.drawer })\n          }\n        >\n          Close\n        </Button>\n      </Drawer>\n    </div>\n  )\n}\n","import { Avatar, Grid, makeStyles, Paper, Typography } from '@material-ui/core'\nimport React, { Fragment, useContext, useEffect, useRef } from 'react'\nimport { ChatContext, UIContext, UserContext } from '../../App'\nimport moment from 'moment'\nconst useStyles = makeStyles((theme) => ({\n  me: {\n    padding: '8px',\n    maxWidth: '60%',\n    float: 'right',\n    marginTop: '16px',\n  },\n\n  partner: {\n    padding: '8px',\n    maxWidth: '60%',\n\n    margin: 'auto',\n    float: 'left',\n    padding: '8px',\n    marginTop: '16px',\n  },\n  date: {\n    fontSize: '12px',\n\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '8px',\n    margin: 'auto',\n  },\n}))\nfunction Messages() {\n  const classes = useStyles()\n\n  const scrollDiv = useRef(null)\n\n  const { chatState } = useContext(ChatContext)\n  const { userState } = useContext(UserContext)\n  const { uiState } = useContext(UIContext)\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [chatState.messages.length])\n\n  function scrollToBottom() {\n    scrollDiv.current.scrollIntoView({ behavior: 'smooth' })\n  }\n  return (\n    <Grid container>\n      {chatState.messages.length\n        ? chatState.messages.map((message) => (\n            <Fragment key={message.id}>\n              {userState.currentUser.id !== message.sender.id ? (\n                <Grid item xs={12} md={12} sm={12}>\n                  <Paper\n                    className={classes.partner}\n                    style={{\n                      backgroundColor: uiState.darkMode\n                        ? 'seagreen'\n                        : 'rgb(240,242,245)',\n                      color: uiState.darkMode && '#fff',\n                    }}\n                  >\n                    {message.body.text && (\n                      <Typography style={{ wordWrap: 'break-word' }}>\n                        {message.body.text}\n                      </Typography>\n                    )}\n                    {message.body.image && (\n                      <Avatar variant=\"square\">\n                        <img alt=''\n                          src={message.body.image}\n                          width=\"100%\"\n                          height=\"100%\"\n                        />\n                      </Avatar>\n                    )}\n                    <Typography className={classes.date}>\n                      {moment(message.createdAt).fromNow()}\n                    </Typography>\n                  </Paper>\n                </Grid>\n              ) : (\n                <Grid\n                  item\n                  md={12}\n                  xs={12}\n                  sm={12}\n                  style={{ marginTop: '16px' }}\n                >\n                  <Paper\n                    className={classes.me}\n                    style={{\n                      backgroundColor: uiState.darkMode\n                        ? 'rgb(1,133,243)'\n                        : 'rgb(220,245,198)',\n                      color: uiState.darkMode && '#fff',\n                    }}\n                  >\n                    {message.body.text && (\n                      <Typography style={{ wordWrap: 'break-word' }}>\n                        {message.body.text}\n                      </Typography>\n                    )}\n                    {message.body.image && (\n                      <Avatar variant=\"square\">\n                        <img alt=''\n                          src={message.body.image}\n                          width=\"100%\"\n                          height=\"100%\"\n                        />\n                      </Avatar>\n                    )}\n                    <Typography\n                      className={classes.date}\n                      style={{ color: uiState.darkMode ? '#fff' : '#00000099' }}\n                    >\n                      {moment(message.createdAt).fromNow()}\n                    </Typography>\n                  </Paper>\n                </Grid>\n              )}\n            </Fragment>\n          ))\n        : null}\n      <div ref={scrollDiv} />\n    </Grid>\n  )\n}\n\nexport default Messages\n","import axios from 'axios'\nconst url = process.env.REACT_APP_ENDPOINT\n\n\nexport const fetchFriendMessages = async (friend_id) => {\n    let token = localStorage.token && JSON.parse(localStorage.token)\n    try{\n        const res = await axios.get(`${url}/api/user/chat/${friend_id}/get_messages`,{headers:{\n            Authorization:`Bearer ${token}`\n        }})\n        return {\n            data:res.data\n        }\n\n    }catch(err){\n        console.log(err)\n    }\n\n}","import {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  ListSubheader,\n  Typography,\n} from '@material-ui/core'\nimport React, { useContext } from 'react'\nimport { UserContext, ChatContext, UIContext } from '../../App'\nimport { fetchFriendMessages } from '../../services/ChatService'\nimport AvartarText from '../UI/AvartarText'\n\nfunction Friends() {\n  const { userState } = useContext(UserContext)\n  const { chatDispatch } = useContext(ChatContext)\n  const { uiState, uiDispatch } = useContext(UIContext)\n\n  const handleFriendSelect = (friend) => {\n    uiDispatch({ type: 'SET_DRAWER', payload: false })\n    chatDispatch({ type: 'SET_SELECTED_FRIEND', payload: friend })\n    fetchFriendMessages(friend.id)\n      .then((res) => {\n        if (res.data) {\n          chatDispatch({ type: 'SET_MESSAGES', payload: res.data.data })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n  return (\n    <List\n      subheader={<ListSubheader component=\"div\">Your Friends</ListSubheader>}\n      style={{ backgroundColor: uiState.darkMode && 'rgb(36,37,38)' }}\n    >\n      {userState.currentUser.friends && userState.currentUser.friends.length\n        ? userState.currentUser.friends.map((friend) => {\n            return (\n              <ListItem\n                key={friend.id}\n                button\n                onClick={() => handleFriendSelect(friend)}\n              >\n                <ListItemAvatar>\n                  {friend.profile_pic ? (\n                    <Avatar alt={friend.name} src={friend.profile_pic} />\n                  ) : (\n                    <AvartarText\n                      text={friend.name}\n                      bg={friend.active ? 'seagreen' : 'tomato'}\n                    />\n                  )}\n                </ListItemAvatar>\n                <ListItemText primary={friend.name} />\n              </ListItem>\n            )\n          })\n        : <Typography>No Friends</Typography>}\n    </List>\n  )\n}\n\nexport default Friends\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","import { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { ChatContext, UIContext } from '../App'\n\nconst url = process.env.REACT_APP_ENDPOINT\n\nconst useSendMessage = ({ textMessage, setTextMessage }) => {\n  const [loading, setLoading] = useState(false)\n\n  const { chatState, chatDispatch } = useContext(ChatContext)\n  const { uiDispatch } = useContext(UIContext)\n\n  const sendMessage = async () => {\n    setLoading(true)\n    let friendId = chatState.selectedFriend.id\n    try {\n      let token = JSON.parse(localStorage.getItem('token'))\n      const response = await axios.post(\n        `${url}/api/user/chat/${friendId}/send`,\n        { text: textMessage },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      )\n      if (response.data) {\n        setTextMessage('')\n        chatDispatch({ type: 'ADD_MESSAGE', payload: response.data.data })\n      }\n      setLoading(false)\n    } catch (err) {\n      setLoading(false)\n      console.log(err)\n      if (err && err.response) {\n        if (err.response.status === 422) {\n          uiDispatch({\n            type: 'SET_MESSAGE',\n            payload: {\n              display: true,\n              text: err.response.data.error,\n              color: 'error',\n            },\n          })\n        }\n      }\n    }\n  }\n\n  return {\n    sendMessage,\n    loading,\n  }\n}\n\nexport default useSendMessage\n","import { IconButton, InputBase, Paper, makeStyles } from '@material-ui/core'\nimport { Send } from '@material-ui/icons'\nimport React, { useContext, useState } from 'react'\nimport { UIContext } from '../../App'\nimport useSendMessage from '../../hooks/useSendMessage'\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    padding: '16px 8px 16px 8px',\n  },\n  inputInput: {\n    flexGrow: 1,\n    paddingLeft: '4px',\n  },\n}))\n\nfunction MessageTextArea() {\n  const { uiState } = useContext(UIContext)\n  const classes = useStyles()\n  const [textMessage, setTextMessage] = useState('')\n\n  const { sendMessage } = useSendMessage({ textMessage, setTextMessage })\n\n  const handleSendMessage = (e) => {\n    e.preventDefault()\n    sendMessage()\n  }\n  return (\n    <Paper\n      elevation={0}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        padding: '16px',\n        width: '100%',\n        backgroundColor: uiState.darkMode && 'rgb(36,37,38)',\n      }}\n    >\n      <InputBase\n        value={textMessage}\n        onChange={(e) => setTextMessage(e.target.value)}\n        placeholder=\"Enter Your Text...\"\n        multiline\n        rowsMax={4}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        style={{\n          borderRadius: '20px 20px 20px 20px',\n          backgroundColor: uiState.darkMode ? 'rgb(24,25,26)' : 'whitesmoke',\n          width: '100%',\n        }}\n      />\n      <IconButton\n        onClick={handleSendMessage}\n        style={{\n          backgroundColor: 'rgb(1,133,243)',\n          color: '#fff',\n          marginLeft: '16px',\n        }}\n      >\n        <Send fontSize=\"small\" />\n      </IconButton>\n    </Paper>\n  )\n}\n\nexport default MessageTextArea\n","import { Avatar, Grid, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\n\nfunction FriendNotSelected() {\n  return (\n    <Grid\n      item\n      md={8}\n      xs={12}\n      sm={12}\n      style={{\n        height: '80vh',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Avatar style={{ width: '100px', height: '100px' }}>\n        <img alt=''\n          src={require('../../assets/friends.png')}\n          style={{ width: '100%', height: '100%' }}\n        />\n      </Avatar>\n\n      <Typography style={{ marginTop: '16px', fontWeight: '800' }}>\n        Select friends from friend lists to start chat\n      </Typography>\n    </Grid>\n  )\n}\n\nexport default FriendNotSelected\n","import React, { useContext, useEffect } from 'react'\nimport {\n  Avatar,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n} from '@material-ui/core'\nimport { ChatContext, UIContext } from '../App'\nimport Messages from '../components/Chat/Messages'\nimport DrawerBar from '../components/Navbar/DrawerBar'\n\nimport Friends from '../components/Chat/Friends'\nimport MessageTextArea from '../components/Chat/MessageTextArea'\nimport FriendNotSelected from '../components/Chat/FriendNotSelected'\nimport AvartarText from '../components/UI/AvartarText'\n\nfunction Messenger() {\n  const { uiDispatch, uiState } = useContext(UIContext)\n  const { chatState, chatDispatch } = useContext(ChatContext)\n  useEffect(() => {\n    uiDispatch({ type: 'SET_NAV_MENU', payload: true })\n    uiDispatch({ type: 'SET_DRAWER', payload: false })\n\n    return () => {\n      uiDispatch({ type: 'SET_NAV_MENU', payload: false })\n      uiDispatch({ type: 'SET_DRAWER', payload: false })\n      chatDispatch({ type: 'SET_SELECTED_FRIEND', payload: null })\n    }\n  }, [])\n\n  return (\n    <div\n      style={{\n        paddingTop: '100px',\n        paddingBottom: '40px',\n        minHeight: '100vh',\n      }}\n    >\n      {!uiState.mdScreen && (\n        <DrawerBar>\n          <Friends />\n        </DrawerBar>\n      )}\n      <Container>\n        <Paper style={{ backgroundColor: uiState.darkMode && 'rgb(36,37,38)' }}>\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={2}\n            style={{ padding: '16px' }}\n          >\n            {uiState.mdScreen && (\n              <Grid\n                item\n                md={4}\n                xs={12}\n                sm={12}\n                style={{\n                  height: '80vh',\n                  overflowY: 'scroll',\n                  overflowX: 'hidden',\n                  scrollbarColor: !uiState.darkMode\n                    ? '#fff rgb(240,242,245)'\n                    : ' rgb(36,37,38) rgb(24,25,26)',\n                }}\n              >\n                <Paper elevation={0}>\n                  <Friends />\n                </Paper>\n              </Grid>\n            )}\n            {chatState.selectedFriend ? (\n              <Grid\n                item\n                md={8}\n                xs={12}\n                sm={12}\n                style={{\n                  height: '80vh',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  margin: 'auto',\n                }}\n              >\n                <Paper\n                  elevation={0}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    padding: '16px',\n                    width: '100%',\n                    position: 'sticky',\n                    top: 0,\n                    backgroundColor: uiState.darkMode && 'rgb(36,37,38)',\n                  }}\n                >\n                  {chatState.selectedFriend.profile_pic ? (\n                    <Avatar>\n                      <img alt=''\n                        src={chatState.selectedFriend.profile_pic}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Avatar>\n                  ) : (\n                    <AvartarText\n                      text={chatState.selectedFriend.name}\n                      bg={\n                        chatState.selectedFriend.active ? 'seagreen' : 'tomato'\n                      }\n                    />\n                  )}\n                  <Typography style={{ marginLeft: '16px' }}>\n                    {chatState.selectedFriend.name}\n                  </Typography>\n                </Paper>\n\n                <Paper\n                  elevation={0}\n                  style={{\n                    padding: '16px',\n                    width: '100%',\n                    height: '60vh',\n                    overflowY: 'scroll',\n                    overflowX: 'hidden',\n                    scrollbarColor: !uiState.darkMode\n                      ? '#fff #fff'\n                      : ' rgb(36,37,38) rgb(36,37,38)',\n\n                    backgroundColor: uiState.darkMode && 'rgb(36,37,38)',\n                  }}\n                >\n                  <Messages />\n                </Paper>\n\n                <div\n                  style={{\n                    position: 'sticky',\n                    bottom: 0,\n                    left: 0,\n                    width: '100%',\n                  }}\n                >\n                  <MessageTextArea />\n                </div>\n              </Grid>\n            ) : (\n              <FriendNotSelected />\n            )}\n          </Grid>\n        </Paper>\n      </Container>\n    </div>\n  )\n}\n\nexport default Messenger\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(\".concat(window.innerWidth, \"px) translateX(\").concat(offsetX - rect.left, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(\".concat(window.innerHeight, \"px) translateY(\").concat(offsetY - rect.top, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height - offsetY, \"px)\");\n}\n\nexport function setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (isAppearing) {\n      if (callback) {\n        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n        if (isAppearing === undefined) {\n          callback(childrenRef.current);\n        } else {\n          callback(childrenRef.current, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(function (node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  var updatePosition = React.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport withStyles from '../styles/withStyles';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n    docked: {\n      flex: '0 0 auto'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      flex: '1 0 auto',\n      zIndex: theme.zIndex.drawer,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      // temporary style\n      position: 'fixed',\n      top: 0,\n      // We disable the focus ring for mouse, touch and keyboard users.\n      // At some point, it would be better to keep it for keyboard users.\n      // :focus-ring CSS pseudo-class will help.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n    paperAnchorLeft: {\n      left: 0,\n      right: 'auto'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n    paperAnchorRight: {\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n    paperAnchorTop: {\n      top: 0,\n      left: 0,\n      bottom: 'auto',\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n    paperAnchorBottom: {\n      top: 'auto',\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedLeft: {\n      borderRight: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedTop: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedRight: {\n      borderLeft: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedBottom: {\n      borderTop: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Modal` component. */\n    modal: {}\n  };\n};\nvar oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nvar Drawer = /*#__PURE__*/React.forwardRef(function Drawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchorProp = _props$anchor === void 0 ? 'left' : _props$anchor,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 16 : _props$elevation,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropPropsProp = _props$ModalProps.BackdropProps,\n      ModalProps = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SlideProps = props.SlideProps,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Slide : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme(); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n  var mounted = React.useRef(false);\n  React.useEffect(function () {\n    mounted.current = true;\n  }, []);\n  var anchor = getAnchor(theme, anchorProp);\n  var drawer = /*#__PURE__*/React.createElement(Paper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperAnchor\".concat(capitalize(anchor))], PaperProps.className, variant !== 'temporary' && classes[\"paperAnchorDocked\".concat(capitalize(anchor))])\n  }), children);\n\n  if (variant === 'permanent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), drawer);\n  }\n\n  var slidingDrawer = /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchor],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps), drawer);\n\n  if (variant === 'persistent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), slidingDrawer);\n  } // variant === temporary\n\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration: transitionDuration\n    }),\n    BackdropComponent: Backdrop,\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    onClose: onClose,\n    ref: ref\n  }, other, ModalProps), slidingDrawer);\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDrawer',\n  flip: false\n})(Drawer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","drawer","width","flexShrink","color","drawerPaper","darkMode","backgroundColor","DrawerBar","children","useContext","UIContext","uiState","uiDispatch","classes","className","open","variant","paper","onClose","type","payload","drawerContainer","onClick","me","padding","maxWidth","float","marginTop","partner","margin","date","fontSize","alignItems","justifyContent","scrollDiv","useRef","chatState","ChatContext","userState","UserContext","useEffect","current","scrollIntoView","behavior","messages","length","Grid","container","map","message","Fragment","key","id","currentUser","sender","item","xs","md","sm","Paper","style","body","text","Typography","wordWrap","image","Avatar","alt","src","height","moment","createdAt","fromNow","ref","fetchFriendMessages","friend_id","token","localStorage","JSON","parse","axios","process","headers","Authorization","res","data","console","log","chatDispatch","List","subheader","ListSubheader","component","friends","friend","ListItem","button","then","catch","err","handleFriendSelect","ListItemAvatar","profile_pic","name","AvartarText","bg","active","ListItemText","primary","createSvgIcon","React","d","textMessage","setTextMessage","useState","loading","setLoading","sendMessage","friendId","selectedFriend","getItem","response","status","error","inputRoot","inputInput","flexGrow","paddingLeft","useSendMessage","elevation","InputBase","value","onChange","e","target","placeholder","multiline","rowsMax","input","borderRadius","IconButton","preventDefault","marginLeft","Send","flexDirection","require","fontWeight","paddingTop","paddingBottom","minHeight","mdScreen","Container","justify","spacing","overflowY","overflowX","scrollbarColor","position","top","bottom","left","props","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","_objectWithoutProperties","_extends","clsx","concat","capitalize","String","withStyles","_defineProperty","boxSizing","marginRight","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","maxWidthSm","maxWidthMd","maxWidthLg","lg","maxWidthXl","xl","setTranslateValue","direction","node","transform","rect","getBoundingClientRect","fakeTransform","computedStyle","window","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","innerHeight","getTranslateValue","webkitTransform","defaultTimeout","enter","duration","exit","_props$direction","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","timeout","_props$TransitionComp","TransitionComponent","Transition","useTheme","childrenRef","handleOwnRef","instance","ReactDOM","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","handleEnter","reflow","handleEntering","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","handleResize","debounce","addEventListener","clear","removeEventListener","nodeRef","appear","state","childProps","visibility","oppositeDirection","right","defaultTransitionDuration","Drawer","_props$anchor","anchor","anchorProp","BackdropProps","_props$elevation","_props$ModalProps","ModalProps","BackdropPropsProp","_props$open","_props$PaperProps","PaperProps","SlideProps","Slide","_props$transitionDura","transitionDuration","_props$variant","mounted","indexOf","isHorizontal","getAnchor","square","docked","slidingDrawer","Modal","BackdropComponent","Backdrop","modal","flex","zIndex","WebkitOverflowScrolling","outline","paperAnchorLeft","paperAnchorRight","paperAnchorTop","maxHeight","paperAnchorBottom","paperAnchorDockedLeft","borderRight","palette","divider","paperAnchorDockedTop","borderBottom","paperAnchorDockedRight","borderLeft","paperAnchorDockedBottom","borderTop","flip","context","ListContext","alignItemsFlexStart","minWidth"],"sourceRoot":""}