{"version":3,"file":"static/js/156.b73251dc.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/deepCopy.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/subscribe.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@material-ui/icons/esm/Close.js","../node_modules/firebase/compat/app/index.ts","../node_modules/@firebase/storage/src/implementation/constants.ts","../node_modules/@firebase/storage/src/implementation/error.ts","../node_modules/@firebase/storage/src/implementation/location.ts","../node_modules/@firebase/storage/src/implementation/connection.ts","../node_modules/@firebase/storage/src/implementation/failrequest.ts","../node_modules/@firebase/storage/src/implementation/type.ts","../node_modules/@firebase/storage/src/implementation/url.ts","../node_modules/@firebase/storage/src/implementation/utils.ts","../node_modules/@firebase/storage/src/implementation/request.ts","../node_modules/@firebase/storage/src/implementation/backoff.ts","../node_modules/@firebase/storage/src/implementation/fs.ts","../node_modules/@firebase/storage/src/platform/browser/base64.ts","../node_modules/@firebase/storage/src/implementation/string.ts","../node_modules/@firebase/storage/src/implementation/blob.ts","../node_modules/@firebase/storage/src/implementation/json.ts","../node_modules/@firebase/storage/src/implementation/path.ts","../node_modules/@firebase/storage/src/implementation/metadata.ts","../node_modules/@firebase/storage/src/implementation/list.ts","../node_modules/@firebase/storage/src/implementation/requestinfo.ts","../node_modules/@firebase/storage/src/implementation/requests.ts","../node_modules/@firebase/storage/src/implementation/taskenums.ts","../node_modules/@firebase/storage/src/implementation/observer.ts","../node_modules/@firebase/storage/src/implementation/async.ts","../node_modules/@firebase/storage/src/platform/browser/connection.ts","../node_modules/@firebase/storage/src/task.ts","../node_modules/@firebase/storage/src/reference.ts","../node_modules/@firebase/storage/src/service.ts","../node_modules/@firebase/storage/src/constants.ts","../node_modules/@firebase/storage/src/api.ts","../node_modules/@firebase/storage/src/index.ts","../node_modules/@firebase/storage-compat/src/tasksnapshot.ts","../node_modules/@firebase/storage-compat/src/task.ts","../node_modules/@firebase/storage-compat/src/list.ts","../node_modules/@firebase/storage-compat/src/reference.ts","../node_modules/@firebase/storage-compat/src/service.ts","../node_modules/@firebase/storage-compat/src/index.ts","../node_modules/@firebase/app-compat/src/firebaseApp.ts","../node_modules/@firebase/app-compat/src/errors.ts","../node_modules/@firebase/app-compat/src/firebaseNamespace.ts","../node_modules/@firebase/app-compat/src/firebaseNamespaceCore.ts","../node_modules/@firebase/app-compat/src/logger.ts","../node_modules/@firebase/app-compat/src/index.ts","../node_modules/@firebase/app-compat/src/registerCoreComponents.ts","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../../package.json';\n\nfirebase.registerVersion(name, version, 'app-compat');\n\nexport default firebase;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * 1 second\n */\nexport const DEFAULT_MIN_SLEEP_TIME_MILLIS = 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to StorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   * @param status_ - Corresponding HTTP Status Code\n   */\n  constructor(code: StorageErrorCode, message: string, private status_ = 0) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  get status(): number {\n    return this.status_;\n  }\n\n  set status(status: number) {\n    this.status_ = status;\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function missingPolyFill(polyFill: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n    `${polyFill} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNode } from '@firebase/util';\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  // Note: The `isNode()` check can be removed when `node-fetch` adds native Blob support\n  // PR: https://github.com/node-fetch/node-fetch/pull/1664\n  return typeof Blob !== 'undefined' && !isNode();\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks the status code to see if the action should be retried.\n *\n * @param status Current HTTP status code returned by server.\n * @param additionalRetryCodes additional retry codes to check against\n */\nexport function isRetryStatusCode(\n  status: number,\n  additionalRetryCodes: number[]\n): boolean {\n  // The codes for which to retry came from this page:\n  // https://cloud.google.com/storage/docs/exponential-backoff\n  const isFiveHundredCode = status >= 500 && status < 600;\n  const extraRetryCodes = [\n    // Request Timeout: web server didn't receive full request in time.\n    408,\n    // Too Many Requests: you're getting rate-limited, basically.\n    429\n  ];\n  const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n  const isAdditionalRetryCode = additionalRetryCodes.indexOf(status) !== -1;\n  return isFiveHundredCode || isExtraRetryCode || isAdditionalRetryCode;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\nimport { isRetryStatusCode } from './utils';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>,\n    private retry = true\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (\n        progressEvent: ProgressEvent\n      ) => void = progressEvent => {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (this.progressCallback_ !== null) {\n          this.progressCallback_(loaded, total);\n        }\n      };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (\n            (!hitServer ||\n              isRetryStatusCode(status, this.additionalRetryCodes_)) &&\n            this.retry\n          ) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string,\n  retry = true\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory,\n    retry\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * Accepts a callback for an action to perform (`doRequest`),\n * and then a callback for when the backoff has completed (`backoffCompleteCb`).\n * The callback sent to start requires an argument to call (`onRequestComplete`).\n * When `start` calls `doRequest`, it passes a callback for when the request has\n * completed, `onRequestComplete`. Based on this, the backoff continues, with\n * another call to `doRequest` and the above loop continues until the timeout\n * is hit, or a successful response occurs.\n * @description\n * @param doRequest Callback to perform request\n * @param backoffCompleteCb Callback to call when backoff has been completed\n */\nexport function start(\n  doRequest: (\n    onRequestComplete: (success: boolean) => void,\n    canceled: boolean\n  ) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  backoffCompleteCb: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      backoffCompleteCb.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      doRequest(responseHandler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function responseHandler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { missingPolyFill } from '../../implementation/error';\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  if (typeof atob === 'undefined') {\n    throw missingPolyFill('base-64');\n  }\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    if ((e as Error).message.includes('polyfill')) {\n      throw e;\n    }\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport { jsonObjectOrNull } from './json';\nimport { ListResult } from '../list';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service._makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service._makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as unknown as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr: StorageError;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.status = xhr.getStatus();\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  let uploadCommand = '';\n  if (bytesToUpload === 0) {\n    uploadCommand = 'finalize';\n  } else if (bytesLeft === bytesToUpload) {\n    uploadCommand = 'upload, finalize';\n  } else {\n    uploadCommand = 'upload';\n  }\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError,\n  retryLimitExceeded\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\nimport { isRetryStatusCode } from './implementation/utils';\nimport { CompleteFn } from '@firebase/util';\nimport { DEFAULT_MIN_SLEEP_TIME_MILLIS } from './implementation/constants';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private pendingTimeout?: ReturnType<typeof setTimeout>;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  private sleepTime: number;\n\n  private maxSleepTime: number;\n\n  isExponentialBackoffExpired(): boolean {\n    return this.sleepTime > this.maxSleepTime;\n  }\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        const backoffExpired = this.isExponentialBackoffExpired();\n        if (isRetryStatusCode(error.status, [])) {\n          if (backoffExpired) {\n            error = retryLimitExceeded();\n          } else {\n            this.sleepTime = Math.max(\n              this.sleepTime * 2,\n              DEFAULT_MIN_SLEEP_TIME_MILLIS\n            );\n            this._needToFetchStatus = true;\n            this.completeTransitions_();\n            return;\n          }\n        }\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this.sleepTime = 0;\n    this.maxSleepTime = this._ref.storage.maxUploadRetryTime;\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this.pendingTimeout = setTimeout(() => {\n              this.pendingTimeout = undefined;\n              this._continueUpload();\n            }, this.sleepTime);\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e as StorageError;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken,\n        /*retry=*/ false // Upload requests should not be retried as each retry should be preceded by another query request. Which is handled in this file.\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize * 2 < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        } else if (this.pendingTimeout) {\n          clearTimeout(this.pendingTimeout);\n          this.pendingTimeout = undefined;\n          this.completeTransitions_();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    // Note: `type` isn't being used. Its type is also incorrect. TaskEvent should not be a string.\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null,\n    retry = true\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion,\n        retry\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport {\n  EmulatorMockTokenOptions,\n  getModularInstance,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('storage');\n  if (emulator) {\n    connectStorageEmulator(storageInstance, ...emulator);\n  }\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UploadTaskSnapshot } from '@firebase/storage';\nimport { ReferenceCompat } from './reference';\nimport { UploadTaskCompat } from './task';\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class UploadTaskSnapshotCompat\n  implements types.UploadTaskSnapshot, Compat<UploadTaskSnapshot>\n{\n  constructor(\n    readonly _delegate: UploadTaskSnapshot,\n    readonly task: UploadTaskCompat,\n    readonly ref: ReferenceCompat\n  ) {}\n\n  get bytesTransferred(): number {\n    return this._delegate.bytesTransferred;\n  }\n  get metadata(): types.FullMetadata {\n    return this._delegate.metadata as types.FullMetadata;\n  }\n  get state(): string {\n    return this._delegate.state;\n  }\n  get totalBytes(): number {\n    return this._delegate.totalBytes;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  UploadTask,\n  StorageError,\n  UploadTaskSnapshot,\n  TaskEvent,\n  StorageObserver\n} from '@firebase/storage';\nimport { UploadTaskSnapshotCompat } from './tasksnapshot';\nimport { ReferenceCompat } from './reference';\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class UploadTaskCompat implements types.UploadTask, Compat<UploadTask> {\n  constructor(\n    readonly _delegate: UploadTask,\n    private readonly _ref: ReferenceCompat\n  ) {}\n\n  get snapshot(): UploadTaskSnapshotCompat {\n    return new UploadTaskSnapshotCompat(\n      this._delegate.snapshot,\n      this,\n      this._ref\n    );\n  }\n\n  cancel = this._delegate.cancel.bind(this._delegate);\n  catch = this._delegate.catch.bind(this._delegate);\n  pause = this._delegate.pause.bind(this._delegate);\n  resume = this._delegate.resume.bind(this._delegate);\n\n  then(\n    onFulfilled?: ((a: UploadTaskSnapshotCompat) => unknown) | null,\n    onRejected?: ((a: StorageError) => unknown) | null\n  ): Promise<unknown> {\n    return this._delegate.then(snapshot => {\n      if (onFulfilled) {\n        return onFulfilled(\n          new UploadTaskSnapshotCompat(snapshot, this, this._ref)\n        );\n      }\n    }, onRejected);\n  }\n\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | types.StorageObserver<UploadTaskSnapshotCompat>\n      | null\n      | ((a: UploadTaskSnapshotCompat) => unknown),\n    error?: (error: StorageError) => void | null,\n    completed?: () => void | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshotCompat> {\n    let wrappedNextOrObserver:\n      | StorageObserver<UploadTaskSnapshot>\n      | undefined\n      | ((a: UploadTaskSnapshot) => unknown) = undefined;\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = (taskSnapshot: UploadTaskSnapshot) =>\n          nextOrObserver(\n            new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n          );\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next\n            ? (taskSnapshot: UploadTaskSnapshot) =>\n                nextOrObserver.next!(\n                  new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n                )\n            : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n    return this._delegate.on(\n      type,\n      wrappedNextOrObserver,\n      error || undefined,\n      completed || undefined\n    );\n  }\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `FirebaseStorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ListResult } from '@firebase/storage';\nimport * as types from '@firebase/storage-types';\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\nimport { Compat } from '@firebase/util';\n\nexport class ListResultCompat implements types.ListResult, Compat<ListResult> {\n  constructor(\n    readonly _delegate: ListResult,\n    private readonly _service: StorageServiceCompat\n  ) {}\n\n  get prefixes(): ReferenceCompat[] {\n    return this._delegate.prefixes.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get items(): ReferenceCompat[] {\n    return this._delegate.items.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get nextPageToken(): string | null {\n    return this._delegate.nextPageToken || null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  StorageReference,\n  uploadBytesResumable,\n  list,\n  listAll,\n  getDownloadURL,\n  getMetadata,\n  updateMetadata,\n  deleteObject,\n  UploadTask,\n  StringFormat,\n  UploadMetadata,\n  FullMetadata,\n  SettableMetadata,\n  _UploadTask,\n  _getChild,\n  _Reference,\n  _FbsBlob,\n  _dataFromString,\n  _invalidRootOperation\n} from '@firebase/storage';\n\nimport { UploadTaskCompat } from './task';\nimport { ListResultCompat } from './list';\nimport { StorageServiceCompat } from './service';\n\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class ReferenceCompat\n  implements types.Reference, Compat<StorageReference>\n{\n  constructor(\n    readonly _delegate: StorageReference,\n    public storage: StorageServiceCompat\n  ) {}\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get bucket(): string {\n    return this._delegate.bucket;\n  }\n\n  get fullPath(): string {\n    return this._delegate.fullPath;\n  }\n\n  toString(): string {\n    return this._delegate.toString();\n  }\n\n  /**\n   * @returns A reference to the object obtained by\n   * appending childPath, removing any duplicate, beginning, or trailing\n   * slashes.\n   */\n  child(childPath: string): types.Reference {\n    const reference = _getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  get root(): types.Reference {\n    return new ReferenceCompat(this._delegate.root, this.storage);\n  }\n\n  /**\n   * @returns A reference to the parent of the\n   * current object, or null if the current object is the root.\n   */\n  get parent(): types.Reference | null {\n    const reference = this._delegate.parent;\n    if (reference == null) {\n      return null;\n    }\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data - The blob to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata?: types.FullMetadata\n  ): types.UploadTask {\n    this._throwIfRoot('put');\n    return new UploadTaskCompat(\n      uploadBytesResumable(this._delegate, data, metadata as UploadMetadata),\n      this\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value - The string to upload.\n   * @param format - The format of the string to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: types.UploadMetadata\n  ): types.UploadTask {\n    this._throwIfRoot('putString');\n    const data = _dataFromString(format, value);\n    const metadataClone = { ...metadata };\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n    return new UploadTaskCompat(\n      new _UploadTask(\n        this._delegate as _Reference,\n        new _FbsBlob(data.data, true),\n        metadataClone as FullMetadata & { [k: string]: string }\n      ) as UploadTask,\n      this\n    );\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @returns A Promise that resolves with all the items and prefixes under\n   *  the current storage reference. `prefixes` contains references to\n   *  sub-directories and `items` contains references to objects in this\n   *  folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<types.ListResult> {\n    return listAll(this._delegate).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options - See ListOptions for details.\n   * @returns A Promise that resolves with the items and prefixes.\n   * `prefixes` contains references to sub-folders and `items`\n   * contains references to objects in this folder. `nextPageToken`\n   * can be used to get the rest of the results.\n   */\n  list(options?: types.ListOptions | null): Promise<types.ListResult> {\n    return list(this._delegate, options || undefined).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * A `Promise` that resolves with the metadata for this object. If this\n   * object doesn't exist or metadata cannot be retreived, the promise is\n   * rejected.\n   */\n  getMetadata(): Promise<types.FullMetadata> {\n    return getMetadata(this._delegate) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata - The new metadata for the object.\n   * Only values that have been explicitly set will be changed. Explicitly\n   * setting a value to null will remove the metadata.\n   * @returns A `Promise` that resolves\n   * with the new metadata for this object.\n   * @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(\n    metadata: types.SettableMetadata\n  ): Promise<types.FullMetadata> {\n    return updateMetadata(\n      this._delegate,\n      metadata as SettableMetadata\n    ) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * @returns A `Promise` that resolves with the download\n   * URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    return getDownloadURL(this._delegate);\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @returns A `Promise` that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    this._throwIfRoot('delete');\n    return deleteObject(this._delegate);\n  }\n\n  private _throwIfRoot(name: string): void {\n    if ((this._delegate as _Reference)._location.path === '') {\n      throw _invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { FirebaseApp } from '@firebase/app-types';\n\nimport {\n  ref,\n  connectStorageEmulator,\n  FirebaseStorage,\n  _Location,\n  _invalidArgument,\n  _FirebaseStorageImpl\n} from '@firebase/storage';\nimport { ReferenceCompat } from './reference';\nimport { Compat, EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n */\nexport class StorageServiceCompat\n  implements types.FirebaseStorage, Compat<FirebaseStorage>\n{\n  constructor(public app: FirebaseApp, readonly _delegate: FirebaseStorage) {}\n\n  get maxOperationRetryTime(): number {\n    return this._delegate.maxOperationRetryTime;\n  }\n\n  get maxUploadRetryTime(): number {\n    return this._delegate.maxUploadRetryTime;\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): types.Reference {\n    if (isUrl(path)) {\n      throw _invalidArgument(\n        'ref() expected a child path but got a URL, use refFromURL instead.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): types.Reference {\n    if (!isUrl(url)) {\n      throw _invalidArgument(\n        'refFromURL() expected a full URL but got a child path, use ref() instead.'\n      );\n    }\n    try {\n      _Location.makeFromUrl(url, (this._delegate as _FirebaseStorageImpl).host);\n    } catch (e) {\n      throw _invalidArgument(\n        'refFromUrl() expected a valid full URL but got an invalid one.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    this._delegate.maxUploadRetryTime = time;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    this._delegate.maxOperationRetryTime = time;\n  }\n\n  useEmulator(\n    host: string,\n    port: number,\n    options: {\n      mockUserToken?: EmulatorMockTokenOptions | string;\n    } = {}\n  ): void {\n    connectStorageEmulator(this._delegate, host, port, options);\n  }\n}\n\nfunction isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport firebase from '@firebase/app-compat';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport {\n  StringFormat,\n  _TaskEvent as TaskEvent,\n  _TaskState as TaskState\n} from '@firebase/storage';\n\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage-compat';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): types.FirebaseStorage {\n  // Dependencies\n  const app = container.getProvider('app-compat').getImmediate();\n  const storageExp = container\n    .getProvider('storage')\n    .getImmediate({ identifier: url });\n\n  const storageServiceCompat: StorageServiceCompat = new StorageServiceCompat(\n    app,\n    storageExp\n  );\n  return storageServiceCompat;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: StorageServiceCompat,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as unknown as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp, url?: string): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseOptions } from './public-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstantiationMode,\n  Name\n} from '@firebase/component';\nimport {\n  deleteApp,\n  _addComponent,\n  _addOrOverwriteComponent,\n  _DEFAULT_ENTRY_NAME,\n  _FirebaseAppInternal as _FirebaseAppExp\n} from '@firebase/app';\nimport { _FirebaseService, _FirebaseNamespace } from './types';\nimport { Compat } from '@firebase/util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * The settable config flag for GDPR opt-in/opt-out\n   */\n  automaticDataCollectionEnabled: boolean;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n}\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n *\n * marked as internal because it references internal types exported from @firebase/app\n * @internal\n */\nexport class FirebaseAppImpl implements Compat<_FirebaseAppExp>, _FirebaseApp {\n  private container: ComponentContainer;\n\n  constructor(\n    readonly _delegate: _FirebaseAppExp,\n    private readonly firebase: _FirebaseNamespace\n  ) {\n    // add itself to container\n    _addComponent(\n      _delegate,\n      new Component('app-compat', () => this, ComponentType.PUBLIC)\n    );\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get options(): FirebaseOptions {\n    return this._delegate.options;\n  }\n\n  delete(): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._delegate.checkDestroyed();\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): _FirebaseService {\n    this._delegate.checkDestroyed();\n\n    // Initialize instance if InstatiationMode is `EXPLICIT`.\n    const provider = this._delegate.container.getProvider(name as Name);\n    if (\n      !provider.isInitialized() &&\n      provider.getComponent()?.instantiationMode === InstantiationMode.EXPLICIT\n    ) {\n      provider.initialize();\n    }\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown as _FirebaseService;\n  }\n\n  /**\n   * Remove a service instance from the cache, so we will create a new instance for this service\n   * when people try to get it again.\n   *\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\n   *\n   * @param name The service name\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\n   * @internal\n   */\n  _removeServiceInstance(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): void {\n    this._delegate.container\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name as any)\n      .clearInstance(instanceIdentifier);\n  }\n\n  /**\n   * @param component the component being added to this app's container\n   * @internal\n   */\n  _addComponent(component: Component): void {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component: Component): void {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n}\n\n// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app-compat',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   *\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-compat');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { isBrowser } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif (isBrowser() && (self as any).firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  // eslint-disable-next-line\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app';\n\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(variant?: string): void {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","deepExtend","target","source","Object","constructor","Date","getTime","undefined","prop","hasOwnProperty","isNode","prototype","toString","call","global","process","isBrowser","self","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","Promise","resolve","reject","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","getDefaultsFromGlobal","window","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","getDefaultAppConfig","config","Deferred","promise","callback","value","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","FirebaseError","code","customData","name","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","key","contains","obj","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","task","then","forEachObserver","observer","next","complete","nextOrObserver","methods","method","implementsAnyMethods","noop","unsub","unsubscribeOne","observers","finalized","finalError","observerCount","fn","sendOne","err","getModularInstance","_delegate","createSvgIcon","React","d","DEFAULT_HOST","StorageError","status_","prependCode","serverResponse","_baseMessage","status","unknown","retryLimitExceeded","canceled","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","invalidFormat","format","internalError","ErrorCode","Location","bucket","path","path_","encode","encodeURIComponent","bucketString","host","bucketLocation","makeFromUrl","url","location","bucketDomain","gsRegex","RegExp","httpModify","loc","decodeURIComponent","firebaseStorageHost","groups","regex","indices","postModify","slice","group","captures","exec","bucketValue","pathValue","invalidUrl","FailRequest","promise_","isString","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","isRetryStatusCode","additionalRetryCodes","isFiveHundredCode","isExtraRetryCode","indexOf","isAdditionalRetryCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","retry","resolve_","reject_","start_","backoffDone","requestWentThrough","connection","wasSuccessCode","getResponse","getErrorText","appDelete_","canceled_","RequestEndStatus","backoffId_","doRequest","backoffCompleteCb","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","apply","callWithDelay","millis","setTimeout","responseHandler","clearGlobalTimeout","clearTimeout","success","waitMillis","Math","random","stopped","stop","wasTimeout","start","backoffCallback","pendingConnection_","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","successCode","wasCanceled","ABORT","appDelete","abort","addAuthHeader_","headers","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","addAppCheckHeader_","appCheckToken","makeRequest","requestInfo","requestFactory","urlParams","assign","body","successCodes","handler","errorHandler","progressCallback","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","bb","append","getBlob","decodeBase64","encoded","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","rest","percentEncodedBytes_","dataURLBytes_","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","array","dataURL","matches","middle","s","end","substring","endsWith","FbsBlob","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","buffer","blobby","map","val","uint8Arrays","finalLength","forEach","merged","index","jsonObjectOrNull","lastComponent","lastIndexOf","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","resource","len","mapping","defineProperty","get","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","fromResponseString","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","fromBackendResponse","RequestInfo","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","split","alt","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","list","delimiter","pageToken","maxResults","isRoot","bucketOnlyServerUrl","listHandler","metadataForUpload_","metadataClone","determineContentType_","multipartUpload","boundary","genBoundary","metadata_","preBlobPart","postBlobPart","maxUploadRetryTime","uploadData","ResumableUploadStatus","current","checkResumeHeader_","allowed","getResponseHeader","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","bytesLeft","bytesToUpload","min","uploadStatus","newCurrent","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","Observer","async","f","argsToForward","XhrConnection","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","sent_","setRequestHeader","response","statusText","header","listener","upload","removeEventListener","XhrTextConnection","responseType","newTextConnection","UploadTask","ref","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","_request","_chunkMultiplier","_codeEquals","_needToFetchStatus","completeTransitions_","backoffExpired","isExponentialBackoffExpired","sleepTime","max","_error","_transition","_metadataErrorHandler","maxSleepTime","storage","_promise","_resolve","_reject","_start","sizeBefore","_transferred","_updateProgress","_uploadUrl","_createResumable","_fetchStatus","_needToFetchMetadata","_fetchMetadata","pendingTimeout","_continueUpload","_oneShotUpload","all","_getAuthToken","_getAppCheckToken","_resolveToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","getPromise","sizeString","isNaN","getResumableUploadStatus","statusRequest","_makeProgressCallback","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","bytesTransferred","totalBytes","completed","_addObserver","_removeObserver","onFulfilled","onRejected","_observers","_notifyObserver","splice","_finishPromise","triggered","fbsAsync","snapshot","valid","Reference","_service","_newRef","newPath","parent","listAllHelper","accumulator","opt","nextPage","options","op","requestsList","makeRequestWithTokens","_throwIfRoot","requestsUpdateMetadata","getDownloadURL","requestsGetDownloadUrl","deleteObject","_xhr","_text","requestsDeleteObject","childPath","canonicalChildPath","filter","component","child","refFromPath","FirebaseStorageImpl","_bucket","_getChild","serviceOrRef","pathOrUrl","test","extractBucket","makeFromBucketSpec","connectStorageEmulator","port","mockUserToken","_overrideAuthToken","app","_authProvider","_appCheckProvider","_url","_firebaseVersion","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","_host","time","POSITIVE_INFINITY","auth","getImmediate","optional","getToken","tokenData","accessToken","appCheck","_deleted","clear","_appId","add","delete","STORAGE_TYPE","uploadBytesResumable","uploadBytesResumableInternal","requestsGetMetadata","getMetadataInternal","listAll","listAllInternal","refInternal","connectEmulatorInternal","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","SDK_VERSION","_registerComponent","Component","setMultipleInstances","registerVersion","version","UploadTaskSnapshotCompat","UploadTaskCompat","pause","resume","wrappedNextOrObserver","taskSnapshot","on","ListResultCompat","ReferenceCompat","_getChildInternal","root","_dataFromString","_UploadTask","_FbsBlob","r","listInternal","updateMetadataInternal","updateMetadata","getDownloadURLInternal","deleteObjectInternal","_invalidRootOperation","StorageServiceCompat","isUrl","_invalidArgument","_Location","storageExp","identifier","instance","namespaceExports","Storage","INTERNAL","registerComponent","setServiceProps","registerStorage","FirebaseAppImpl","_addComponent","automaticDataCollectionEnabled","checkDestroyed","removeApp","deleteApp","_DEFAULT_ENTRY_NAME","provider","isInitialized","getComponent","instantiationMode","initialize","clearInstance","_addOrOverwriteComponent","ERRORS","ERROR_FACTORY","createFirebaseNamespace","namespace","firebaseAppImpl","apps","__esModule","initializeApp","rawConfig","modularAPIs","appCompat","setLogLevel","onLog","componentName","componentNameWithoutCompat","serviceNamespace","appArg","appName","serviceProps","serviceFxn","_getService","multipleInstances","useAsService","createFirebaseNamespaceCore","extendNamespace","props","logger","Logger","warn","sdkVersion","variant","firebaseNamespace","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","done","unlisten","DOMException","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","PlatformLoggerServiceImpl","getProviders","isVersionServiceProvider","library","logString","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","_components","addComponent","debug","addOrOverwriteComponent","values","_getProvider","heartbeatController","triggerHeartbeat","_removeServiceInstance","_clearComponents","_options","_config","_name","_automaticDataCollectionEnabled","_container","_isDeleted","isDeleted","existingApp","ComponentContainer","newApp","getApp","getApps","from","libraryKeyOrName","libraryMismatch","versionMismatch","warning","logCallback","setUserLogHandler","logLevel","setLogLevelImpl","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","now","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","toISOString","heartbeatsCache","maxSize","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","mode","onInstanceCreated","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","deferred","shouldAutoInitialize","getOrInitializeService","isComponentEager","entries","instanceDeferred","services","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","existingInstance","callbacks","_a","invokeOnInitCallbacks","providers","setComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","_logLevel","TypeError","_logHandler","_userLogHandler","level","inst","customLogLevel","userLogHandler","arg","ignored","toLowerCase"],"sourceRoot":""}