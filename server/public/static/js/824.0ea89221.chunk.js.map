{"version":3,"file":"static/js/824.0ea89221.chunk.js","mappings":"8NAsCA,UAhCA,WACE,IAAMA,GAASC,EAAAA,EAAAA,MACf,GAAmCC,EAAAA,EAAAA,YAAWC,EAAAA,IAAtCC,EAAS,EAATA,UAAUC,EAAY,EAAZA,aAClB,GAAwBC,EAAAA,EAAAA,UAAS,MAAK,eAA/BC,EAAI,KAAEC,EAAO,KA0BpB,OAxBAC,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAUM,YAAYC,IAAMX,EAAOY,OACrCJ,EAAQJ,EAAUM,iBAEf,CACH,IAAIG,EAAYT,EAAUU,MAAMC,WAAU,SAAAR,GAAI,OAAIA,EAAKI,IAAMX,EAAOY,MAAM,KACvD,IAAfC,EACFL,EAAQJ,EAAUU,MAAMD,KAGxBG,EAAAA,EAAAA,IAAchB,EAAOY,QAAQK,MAAK,SAACC,GAC7BA,EAAIC,OACNX,EAAQU,EAAIC,KAAKZ,MACjBF,EAAa,CAACe,KAAK,WAAWC,QAAQH,EAAIC,KAAKZ,QAE7CW,EAAII,OACNC,QAAQC,IAAIN,EAAII,MAEpB,IAAGG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,EAAI,GAEpC,CAEF,GAAG,CAAC1B,EAAOY,SAEJ,2BAAML,GAAQ,gBAAC,IAAW,CAACA,KAAMA,IAC1C,C","sources":["screens/Profile.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { UserContext } from '../App'\nimport { useParams } from 'react-router-dom'\nimport { fetchUserById } from \"../services/UserServices\"\nimport UserProfile from '../components/Profile/UserProfile'\n\nfunction Profile() {\n  const params = useParams()\n  const { userState,userDispatch } = useContext(UserContext)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    if (userState.currentUser.id == params.userId) {\n      setUser(userState.currentUser)\n    }\n    else {\n      let userIndex = userState.users.findIndex(user => user.id == params.userId)\n      if (userIndex !== -1) {\n        setUser(userState.users[userIndex])\n      }\n      else {\n        fetchUserById(params.userId).then((res) => {\n          if (res.data) {\n            setUser(res.data.user)\n            userDispatch({type:\"ADD_USER\",payload:res.data.user})\n          }\n          if (res.error) {\n            console.log(res.error)\n          }\n        }).catch(err => console.log(err))\n      }\n    }\n\n  }, [params.userId])\n\n  return <div>{user && <UserProfile user={user} />}</div>\n}\n\nexport default Profile\n"],"names":["params","useParams","useContext","UserContext","userState","userDispatch","useState","user","setUser","useEffect","currentUser","id","userId","userIndex","users","findIndex","fetchUserById","then","res","data","type","payload","error","console","log","catch","err"],"sourceRoot":""}