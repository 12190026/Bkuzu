{"version":3,"file":"static/js/326.ae7cb999.chunk.js","mappings":"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","sources":["hooks/useUpdateProfilePic.js","components/Profile/UpdateProfileImage.js","components/Profile/UpdateCoverImage.js","components/Profile/ProfileHeader.js","components/Profile/ProfileTimeline.js","components/Profile/Friends.js","components/Profile/UserProfile.js","services/UserServices.js"],"sourcesContent":["import { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { UserContext, UIContext } from '../App'\nimport { storage } from '../firebase/firebase'\nconst url = process.env.REACT_APP_ENDPOINT\n\nconst useUpdateProfilePic = ({ profile_pic, cover_pic, history }) => {\n  const [loading, setLoading] = useState(false)\n\n  const { userState, userDispatch } = useContext(UserContext)\n  const { uiDispatch } = useContext(UIContext)\n\n  const updateProfilePic = () => {\n    let filename = `profile_pic/${userState.currentUser.name}-${Date.now()}-${\n      profile_pic.name\n    }`\n    const uploadTask = storage.ref(`images/${filename}`).put(profile_pic)\n    uploadTask.on(\n      'state_changed',\n      () => {\n        setLoading(true)\n      },\n      (err) => {\n        console.log('error from firebase')\n        setLoading(false)\n      },\n      () => {\n        storage\n          .ref('images')\n          .child(filename)\n          .getDownloadURL()\n          .then((uri) => {\n            saveProfilePic(uri)\n          })\n      },\n    )\n  }\n\n  const updateCoverPic = () => {\n    let filename = `cover_pic/${userState.currentUser.name}-${Date.now()}-${\n      cover_pic.name\n    }`\n    const uploadTask = storage.ref(`images/${filename}`).put(cover_pic)\n    uploadTask.on(\n      'state_changed',\n      () => {\n        setLoading(true)\n      },\n      (err) => {\n        console.log('error from firebase')\n        setLoading(false)\n      },\n      () => {\n        storage\n          .ref('images')\n          .child(filename)\n          .getDownloadURL()\n          .then((uri) => {\n            saveCoverImage(uri)\n          })\n      },\n    )\n  }\n\n  const saveProfilePic = async (profile_url) => {\n    setLoading(true)\n    try {\n      let token = JSON.parse(localStorage.getItem('token'))\n      const response = await axios.put(\n        `${url}/api/user/profile_pic/update`,\n        { profile_url },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      )\n      if (response.data) {\n        uiDispatch({\n          type: 'SET_MESSAGE',\n          payload: {\n            text: response.data.message,\n            color: 'success',\n            display: true,\n          },\n        })\n        userDispatch({ type: 'UPDATE_USER', payload: response.data.user })\n      }\n      setLoading(false)\n      history.push('/home')\n    } catch (err) {\n      setLoading(false)\n      console.log(err)\n    }\n  }\n\n  const saveCoverImage = async (cover_url) => {\n    setLoading(true)\n    try {\n      let token = JSON.parse(localStorage.getItem('token'))\n      const response = await axios.put(\n        `${url}/api/user/cover_pic/update`,\n        { cover_url },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      )\n      if (response.data) {\n        uiDispatch({\n          type: 'SET_MESSAGE',\n          payload: {\n            text: response.data.message,\n            color: 'success',\n            display: true,\n          },\n        })\n        userDispatch({ type: 'UPDATE_USER', payload: response.data.user })\n      }\n      setLoading(false)\n      history.push('/home')\n    } catch (err) {\n      setLoading(false)\n      console.log(err)\n    }\n  }\n\n  return {\n    updateProfilePic,\n    updateCoverPic,\n\n    loading,\n  }\n}\n\nexport default useUpdateProfilePic\n","import {\n  Avatar,\n  Badge,\n  Button,\n  DialogActions,\n  DialogTitle,\n  IconButton,\n  Dialog,\n  DialogContent,\n} from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nimport React, { useContext, useRef, useState } from 'react'\nimport AvartarText from '../UI/AvartarText'\nimport useUpdateProfilePic from '../../hooks/useUpdateProfilePic'\nimport { CameraAlt as CameraIcon } from '@material-ui/icons'\nimport DialogLoading from '../UI/DialogLoading'\nimport { UserContext } from '../../App'\nfunction UpdateProfileImage({ user }) {\n  const {userState} = useContext(UserContext)\n  const history = useHistory()\n  const [profilePic, setProfilePic] = useState(null)\n  const [previewImage, setPreviewImage] = useState(null)\n  const [menu, setMenu] = useState(false)\n\n  const inputFileRef = useRef(null)\n\n  const { updateProfilePic, loading } = useUpdateProfilePic({\n    profile_pic: profilePic,\n    history,\n  })\n\n  const handleImageChange = (e) => {\n    setProfilePic(e.target.files[0])\n    const reader = new FileReader()\n    reader.readAsDataURL(e.target.files[0])\n    reader.onload = () => {\n      setPreviewImage(reader.result)\n      setMenu(true)\n    }\n  }\n\n  const handleImageClick = () => {\n    inputFileRef.current.click()\n  }\n\n  const handleUpload = () => {\n    updateProfilePic()\n    handleCancel()\n  }\n\n  const handleCancel = () => {\n    setProfilePic(null)\n    setPreviewImage(null)\n    setMenu(false)\n  }\n\n  return (\n    <div>\n      <Badge\n      overlap=\"rectangular\"\n        badgeContent={\n          userState.currentUser.id == user.id && (\n            <IconButton\n              style={{ bottom: -140, left: -20 }}\n              onClick={handleImageClick}\n            >\n              <Avatar>\n                <CameraIcon style={{ color: 'black' }} />\n              </Avatar>\n            </IconButton>\n          )\n        }\n        style={{\n          position: 'absolute',\n          bottom: -30,\n          width: '170px',\n          height: '170px',\n          zIndex: 2,\n          left: '40%',\n        }}\n      >\n        {user.profile_pic ? (\n          <Avatar\n            style={{\n              width: '170px',\n              height: '170px',\n            }}\n          >\n            <img src={user.profile_pic} width=\"100%\" height=\"100%\" alt={user.name} />\n          </Avatar>\n        ) : (\n          <AvartarText\n            text={user.name}\n            bg={user.active ? 'seagreen' : 'tomato'}\n            fontSize=\"40px\"\n            size=\"170px\"\n          />\n        )}\n      </Badge>\n      <input\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\"image/*\"\n        ref={inputFileRef}\n        onChange={handleImageChange}\n      />\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        fullWidth\n        scroll=\"body\"\n        maxWidth=\"sm\"\n        open={menu}\n        onClose={() => setMenu(false)}\n        style={{ width: '100%' }}\n      >\n        <DialogTitle>Profile Picture</DialogTitle>\n        <DialogContent>\n          {previewImage && (\n            <img src={previewImage} width=\"100%\" height=\"400px\" alt=\"\" />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" onClick={handleUpload} color=\"primary\">\n            Upload\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleCancel}\n            style={{ backgroundColor: 'tomato', color: '#fff' }}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {loading && (\n        <DialogLoading loading={loading} text=\"Uploading Profile Pic...\" />\n      )}\n    </div>\n  )\n}\n\nexport default UpdateProfileImage\n","import {\n  Avatar,\n  Button,\n  DialogActions,\n  DialogTitle,\n  IconButton,\n  Dialog,\n  DialogContent,\n} from '@material-ui/core'\nimport React, { useState, useRef } from 'react'\nimport { CameraAlt as CameraIcon } from '@material-ui/icons'\nimport useUpdateProfilePic from '../../hooks/useUpdateProfilePic'\nimport DialogLoading from '../UI/DialogLoading'\nimport { useHistory } from 'react-router-dom'\nfunction UpdateCoverImage() {\n  const history = useHistory()\n  const [coverPic, setCoverPic] = useState(null)\n  const [previewImage, setPreviewImage] = useState(null)\n  const [menu, setMenu] = useState(false)\n\n  const inputFileRef = useRef(null)\n\n  const { updateCoverPic, loading } = useUpdateProfilePic({\n    cover_pic: coverPic,\n    history\n  })\n\n  const handleImageChange = (e) => {\n    setCoverPic(e.target.files[0])\n    const reader = new FileReader()\n    reader.readAsDataURL(e.target.files[0])\n    reader.onload = () => {\n      setPreviewImage(reader.result)\n      setMenu(true)\n    }\n  }\n\n  const handleImageClick = () => {\n    inputFileRef.current.click()\n  }\n\n  const handleUpload = () => {\n    updateCoverPic()\n    handleCancel()\n  }\n\n  const handleCancel = () => {\n    setCoverPic(null)\n    setPreviewImage(null)\n    setMenu(false)\n  }\n\n  return (\n    <div>\n      <IconButton\n        onClick={handleImageClick}\n        style={{ position: 'absolute', bottom: 30, left: 20, zIndex: 2 }}\n      >\n        <Avatar>\n          <CameraIcon style={{ color: 'blue' }} />\n        </Avatar>\n      </IconButton>\n\n      {loading && (\n        <DialogLoading loading={loading} text=\"Uploading Cover  Pic...\" />\n      )}\n\n      <input\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\"image/*\"\n        ref={inputFileRef}\n        onChange={handleImageChange}\n      />\n\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        fullWidth\n        scroll=\"body\"\n        maxWidth=\"sm\"\n        open={menu}\n        onClose={() => setMenu(false)}\n        style={{ width: '100%' }}\n      >\n        <DialogTitle>Cover Picture</DialogTitle>\n        <DialogContent>\n          {previewImage && (\n            <img src={previewImage} width=\"100%\" height=\"400px\" alt=\"preview\" />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" onClick={handleUpload} color=\"primary\">\n            Upload\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleCancel}\n            style={{ backgroundColor: 'tomato', color: '#fff' }}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default UpdateCoverImage\n","import React, { useContext } from 'react'\nimport { Paper, Typography, makeStyles, Grid, Button } from '@material-ui/core'\nimport UpdateProfileImage from './UpdateProfileImage'\nimport UpdateCoverImage from './UpdateCoverImage'\nimport { UserContext } from '../../App'\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n    height: '40vh',\n    marginTop: '60px',\n    position: 'relative',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: '100% 40vh',\n  },\n\n  overlay: {\n    position: 'absolute',\n    background: 'rgba(0,0,0,0.5)',\n    width: '100%',\n    height: '40vh',\n    top: 0,\n  },\n}))\nfunction ProfileHeader({ user }) {\n  const { userState } = useContext(UserContext)\n  const classes = useStyles()\n  return (\n    <div>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} sm={12} md={6}>\n          <Paper\n            elevation={10}\n            className={classes.paper}\n            style={{\n              backgroundImage: user.cover_image\n                ? 'url(' + user.cover_image + ')'\n                : null,\n            }}\n          >\n            <UpdateProfileImage user={user} type=\"profile\" />\n            {userState.currentUser.id == user.id && (\n              <>\n                <UpdateCoverImage />\n              </>\n            )}\n            <div className={classes.overlay}></div>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ marginTop: '30px' }}\n      >\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={6}\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: '16px',\n          }}\n        >\n          <Typography style={{ fontSize: '30px', fontWeight: '800' }}>\n            {user.name}\n          </Typography>\n        \n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default ProfileHeader\n","import { Grid} from '@material-ui/core'\nimport React, { useContext } from 'react'\nimport WritePostCard from '../Post/PostForm/WritePostCard'\nimport { UserContext, PostContext } from '../../App'\nimport Posts from '../Post/Posts'\n\n\nfunction ProfileTimeline({ user }) {\n  const { userState } = useContext(UserContext)\n  const { postState } = useContext(PostContext)\n\n  const getUserPost = () => {\n    return postState.posts.filter((post) => post.user.id == user.id)\n  }\n  return (\n    <Grid container justify=\"center\" style={{ marginTop: '25px' }} spacing={2}>\n      <Grid item xs={12} sm={12} md={8}>\n        {userState.currentUser.id == user.id && <WritePostCard />}\n        <Posts posts={getUserPost()} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default ProfileTimeline\n","import React from 'react'\nimport { Paper, Grid, Typography, Button, Avatar } from '@material-ui/core'\nimport AvartarText from '../UI/AvartarText'\n\nfunction Friends({ user }) {\n  return (\n    <Grid container spacing={2}>\n      {user.friends &&\n        user.friends.map((friend) => (\n          <Grid item xs={12} sm={6} md={6} key={friend.id}>\n            <Paper\n              style={{\n                padding: '16px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}\n            >\n              {friend.profile_pic ? (\n                <Avatar src={friend.profile_pic} variant=\"square\" />\n              ) : (\n                <AvartarText\n                  bg={friend.active ? 'seagreen' : 'tomato'}\n                  text={friend.name}\n                  size={70}\n                />\n              )}\n              <Typography\n                style={{ marginTop: '16px', flexGrow: 1 }}\n                variant=\"h5\"\n                color=\"inherit\"\n              >\n                {friend.name}\n              </Typography>\n              <Typography\n                style={{ marginTop: '6px', flexGrow: 1 }}\n                variant=\"h6\"\n                color=\"inherit\"\n              >\n                {friend.email}\n              </Typography>\n              <Button\n                variant=\"contained\"\n                style={{\n                  backgroundColor: 'tomato',\n                  color: '#fff',\n                  marginTop: '16px',\n                }}\n              >\n                Unfriend\n              </Button>\n            </Paper>\n          </Grid>\n        ))}\n    </Grid>\n  )\n}\n\nexport default Friends\n","import React, { useContext } from 'react'\nimport { MoreHoriz, Edit, SearchOutlined } from '@material-ui/icons'\nimport { Paper, AppBar, Tabs, Tab, Box, Grid, Divider } from '@material-ui/core'\n\nimport ProfileHeader from './ProfileHeader'\nimport ProfileTimeline from './ProfileTimeline'\nimport Friends from './Friends'\nimport { UIContext } from '../../App'\n\nfunction UserProfile({ user, conScreen }) {\n  const { uiState } = useContext(UIContext)\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n  return (\n    <div style={{ minHeight: '100vh' }}>\n      <Paper\n        style={{\n          width: '100%',\n          backgroundColor: uiState.darkMode && 'rgb(36,37,38)',\n        }}\n      >\n        <ProfileHeader user={user} />\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={12} md={6}>\n            <Divider />\n            <AppBar\n              position=\"static\"\n              style={{\n                background: uiState.darkMode ? 'rgb(36,37,38)' : '#fff',\n                color: uiState.darkMode ? '#fff' : 'black',\n                alignItems: 'center',\n              }}\n              elevation={0}\n            >\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                variant=\"scrollable\"\n                scrollButtons=\"on\"\n                indicatorColor=\"primary\"\n              >\n                <Tab label=\"Timeline\" />\n\n                <Tab label=\"Friends\" />\n              </Tabs>\n            </AppBar>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={12} md={conScreen ? 12 : 6}>\n          <TabPanel value={value} index={0}>\n            <ProfileTimeline user={user} />\n          </TabPanel>\n\n          <TabPanel value={value} index={1}>\n            <Friends user={user} />\n          </TabPanel>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div hidden={value !== index} {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  )\n}\n\nexport default UserProfile\n","import axios from 'axios'\nconst url = process.env.REACT_APP_ENDPOINT\n\nexport const fetchUserById = async (user_id) => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/${user_id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n\nexport const fetchRecommandedUsers = async () => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/recommanded_users`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n\n\nexport const sendFriendRequest = async (user_id) => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/friend_request/${user_id}/send`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n\n\nexport const fetchIncommingFriendRequests = async () => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/friend_request/received`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n\n\n\nexport const fetchSendedFriendRequests = async () => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/friend_request/sended`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n\n\n\nexport const acceptFriendRequest = async (request_id) => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/friend_request/${request_id}/accept`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n\n\nexport const declineFriendRequest = async (request_id) => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/friend_request/${request_id}/decline`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n\n\n\n\nexport const cancelFriendRequest = async (request_id) => {\n  let token = JSON.parse(localStorage.token)\n  try {\n    const { data } = await axios.get(`${url}/api/user/friend_request/${request_id}/cancel`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (data) {\n      return {\n        data,\n      }\n    }\n  } catch (err) {\n    if (err && err.response) {\n      return {\n        error: err.response.data.error,\n      }\n    }\n  }\n}\n"],"names":["url","process","profile_pic","cover_pic","history","useState","loading","setLoading","useContext","UserContext","userState","userDispatch","uiDispatch","UIContext","saveProfilePic","profile_url","token","JSON","parse","localStorage","getItem","axios","headers","Authorization","response","data","type","payload","text","message","color","display","user","push","console","log","saveCoverImage","cover_url","updateProfilePic","filename","currentUser","name","Date","now","storage","put","on","err","child","getDownloadURL","then","uri","updateCoverPic","useHistory","profilePic","setProfilePic","previewImage","setPreviewImage","menu","setMenu","inputFileRef","useRef","useUpdateProfilePic","handleCancel","Badge","overlap","badgeContent","id","IconButton","style","bottom","left","onClick","current","click","Avatar","position","width","height","zIndex","src","alt","AvartarText","bg","active","fontSize","size","accept","ref","onChange","e","target","files","reader","FileReader","readAsDataURL","onload","result","Dialog","disableBackdropClick","disableEscapeKeyDown","fullWidth","scroll","maxWidth","open","onClose","DialogTitle","DialogContent","DialogActions","Button","variant","backgroundColor","DialogLoading","coverPic","setCoverPic","useStyles","makeStyles","theme","paper","marginTop","backgroundRepeat","backgroundPosition","backgroundSize","overlay","background","top","classes","Grid","container","justifyContent","alignItems","item","xs","sm","md","Paper","elevation","className","backgroundImage","cover_image","flexDirection","marginBottom","Typography","fontWeight","postState","PostContext","justify","spacing","WritePostCard","Posts","posts","filter","post","friends","map","friend","key","padding","flexGrow","email","TabPanel","props","children","value","index","other","hidden","Box","p","conScreen","uiState","React","setValue","minHeight","darkMode","Divider","AppBar","Tabs","event","newValue","scrollButtons","indicatorColor","Tab","label","fetchUserById","user_id","error","fetchRecommandedUsers","fetchIncommingFriendRequests","fetchSendedFriendRequests"],"sourceRoot":""}